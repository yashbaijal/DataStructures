How to  extaract Headers from Response:

Headers allHeaders=response.getHeaders();
for(Header head:allHeaders)
{
  System.out.println(head.getName()+"--------"+head.getValue());
} 

 if header is multivalued:
 List<Header> allValue= response.getHeaders().getList("header_name");
 for(Header head:allHeaders)
{
  System.out.println(head.getName()+"--------"+head.getValue());
}

if only values of header are required:
List<String> allValue= response.getHeaders().getValues("header_name");

---------------------------------------------------------
How to fetch cookies :
response.getCookie("cookie_name"); --- only provides name of cookie
reponse.getDetailedCookie("cookie_name");--------- cookie key as well as value


fetching multiple cookies values:

Map<String,String> cookie=response.getCookies();
for(Map.Entry<String,String> entry:cookie.entrySet())
{
  System.out.println(entry.getKey()+"------"+entry.getValue());
}

---> Map<String, String> allCookies = get("https://www.stackoverflow.com").getCookies();

List<String> myCookieValues = allCookies.getValues("myCookieName");

if need to get cookies attributes as well as value:

Cookies cookie=response.getDetailedCookies();
List<Cookie> cookieList= cookie.asList();

for(Cookie cookie:cookieList){
System.out.println(cookie.asString()); }

Cookies allDetailedCookies = get("https://www.stackoverflow.com").getDetailedCookies();

Cookie myCookie = allDetailedCookies.get("myCookieName");
myCookie.getValue();
myCookie.getDomain();
myCookie.getExpiryDate();
myCookie.getMaxAge();

---->If multi valued cookie :

List<Cookie> myCookies = allDetailedCookies.getList("myCookieNAme");

Sending Cookies in Request :

Response response=RestAssured.given().contentType(ContentType.JSON).cookie("key",value).body().post();
--------------------------------------------------------------

POJO -: Plain Old Java Objects
A java class that don't extend or implemet properties from any other framework related classes, use to represent data or structure of Payload of request or Node in request . Mainly consists of default constructors , private members and prublic getters and setters method.

----------------------------------------------------
Convert A Portion Of Nested JSON Object Response To POJO To Extract Value From Response:

eg: we need to extract only Address  obj from entire response .

Address address=RestAssured.given().body().when().post().jsonPath().getObject("address",Address.class);
-----------------------------------------------------

Three ways to parse Response of Request in RestAssured:

1. TypeReference: bases on response structure we convert response into suitable data structure.
 
Converting To Map:

Map<String,Object> responseToMap=RestAssured.get("https://restful-booker.herokuapp.com/booking/1345").as(new TypeRef<Map<String,Object>>(){});
responseToMap.keySet().forEach(k->System.out.println(k+"---"+responseToMap.get(k)));

Converting to List:

List<Map<String,Object>> responsetoList=RestAssured.get("https://run.mocky.io/v3/7db4566c-3f45-4ad9-a779-b48dbe5a7947").as(new TypeRef<List<Map<String,Object>>>(){});

2. Json Path:

JsonPath jp= response.jsonPath();
          OR
JsonPath jp= new JsonPath(response.asString()); 

jp.get("path");

List<String> first_name=jp.getList("first_name"); // when path returns more than one results
System.out.println(first_name);

Filters in JsonPath : used to fetch specific set of data from response 

        List<String> femaleFirstNames=jp.getList("findAll{it.gender=='Female'}.first_name");
        System.out.println(femaleFirstNames);

        List<String> emailOfSE=jp.getList("findAll{it.gender=='Female' & it.profession=='SoftwareEngineer'}.email");
        System.out.println(emailOfSE);

        List<String> emailOR=jp.getList("findAll{it.location=='Remote' | it.profession=='HR'}.email");
        System.out.println(emailOR);

3. POJO : first response is serialized to desired class then using getter methods we can assert or parse responses.

-----------------------------------------------------------------------

Serialization : Converting response to POJO class 

      public static Object convertFromJson(String jsonData, Class<?> classType) {
        Object objFromJson = null;
        try {
            ObjectMapper mapper = new ObjectMapper();
            mapper.configure(DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES,
                    false);
            objFromJson = mapper.readValue(jsonData, classType);
        }
        catch(Exception e) {
            e.printStackTrace();
            e.printStackTrace();
        }

        return objFromJson;
    }
 
De-serialization: converting object to JSON

 public static String convertToJson(Object obj) {
        String jsonData = null;
        try {
            ObjectMapper mapper = new ObjectMapper();
            jsonData =  mapper.writeValueAsString(obj);
        }
        catch(Exception e) {
            e.printStackTrace();
        }
        return jsonData;
    }
 
 ---------------------------------------------------------------------
 
 How to Bypass SSL in RestAssured:
 
 RestAssured.useRelaxedHTTPSValidation();
 
 public static void useRelaxedHTTPSValidation(String protocol) {
        config = config().sslConfig(SSLConfig.sslConfig().relaxedHTTPSValidation(protocol));
    }
    
    -----------------------------------------------------------------
RequestSpecification requestSpecification=null;

    @BeforeClass
    public void getSpec()
    {
        RequestSpecBuilder requestSpecBuilder=new RequestSpecBuilder();
        requestSpecBuilder.setBaseUri("https://dummy.restapiexample.com/")
                .setBasePath("/api/v1/employees");
        requestSpecification=requestSpecBuilder.build();
    }

    @Test
    public void getResponse()
    {
        Response response= RestAssured.given().spec(requestSpecification).when().get();
        System.out.println(response.getStatusCode());
        JsonPath jp=new JsonPath(response.asString());
        List<String> firstNames= jp.getList("data.findAll{it.employee_age < 40}.employee_name");
        for(String name:firstNames)
        {
            System.out.print(name+" ");
        }
    }

    @Test
    public void getPartialResponse()
    {
        RestAssured.useRelaxedHTTPSValidation();
        Response response= RestAssured.given().when().get("https://randomuser.me/api");
        List<Results> results= response.jsonPath().getList("results",Results.class);
        Location location=response.jsonPath().getObject("results[0].location",Location.class);
        System.out.println(location.getCity()+"--"+location.getCountry()+"--"+location.getPostcode());
        Map<String,String> map=response.getCookies();
        for(Map.Entry<String,String> entry:map.entrySet())
        {
            System.out.println("inside for");
            System.out.println(entry.getKey()+"------"+entry.getValue());
        }

//        Headers allHeader=response.getHeaders();
//        for(Header head:allHeader)
//        {
//            System.out.println(head.getName()+"--------"+head.getValue());
//        }
//        List<Header> listOfHeader=response.getHeaders().getList("Report-To");
//        listOfHeader.forEach(header -> System.out.println(header.getValue()));
//        System.out.println("value of header : "+response.getHeader("X-Powered-By"));



    }

