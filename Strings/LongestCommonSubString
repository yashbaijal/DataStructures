===========Using DP Tabular Approach TC=o(n*m)===========
public class codePrep {

public static int longestCommonSubstring(String a, String b)
{
    int n=a.length();
    int m=b.length();

    int [][] dp= new int[n+1][m+1];

    for(int i=0;i<=n;i++) dp[i][0]=0;
    for(int j=0;j<=m;j++) dp[0][j]=0;

    int ans=0;

    for(int i=0;i<n;i++)
    {
        for(int j=0;j<m;j++)
        {
            if(a.charAt(i)==b.charAt(j))
            {
                dp[i][j]=1+dp[i-1][j-1];
                ans=Math.max(ans,dp[i][j]);
            }
            else
            {
                dp[i][j]=0;
            }
        }
    }
    return ans;
}


    public static void main(String[] args) {

        String s1 = "OldSite:GeeksforGeeks.org";
        String s2 = "NewSite:GeeksQuiz.com";

        int output=longestCommonSubstring(s1,s2);
        System.out.println(output);
    }
}
