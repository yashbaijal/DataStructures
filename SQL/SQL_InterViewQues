
2nd Max salary:
select max(salary) as secondHighestSalary from  employee where salary < (select max(salary) from  employee);

=======================================
Nth Maximum salary :

1. Approach 1:

select distinct salary from employee order by salary desc limit 1 offset 1 ;

select IFNULL((select distinct salary from employee order by salary desc limit 1 offset 1),NULL) as secondHighestSalary;

above query handle those cases where all salary are equal and we get null as secondhighest salary--> hence
IFNULL is used.
Distinct is used to eliminate duplicate values.
-> offset values can be set as per need like 1 for second highest, 2 for third highest.

2. Approach 2:

select salary as secondHighestSalary from (select salary , dense_rank() over (order by salary desc ) as result from employee ) temp where temp.result=2;

interview: select distinct salary from (select salary ,dense_rank() over (order by salary desc) as denserank from employee ) temp where temp.denserank=2;
--> here temp is derived table from set of results.

=========================================
Query To to find out customers who have bought from a store more than once (Repeat customer)

select C.custID, C.first_name,C.last_name,count(*) as totalOrders
from Orders as O JOIN / INNER JOIN Customers as C on O.custID=C.custID
group by C.custID,C.first_name,C.last_name 
having count(*)>1;

-> Above query using derived table but , previous one was efficient with less code
select custID ,first_name,last_name, totalOrders from (

select C.custID, C.first_name,C.last_name,count(*) as totalOrders
from Orders as O JOIN / INNER JOIN  Customers as C on O.custID=C.custID
group by C.custID,C.first_name,C.last_name

) as temptable where totalOrders >1;

================================================

Employees Earning more than their managers:

Input: 
Employee table:
+----+-------+--------+-----------+
| id | name  | salary | managerId |
+----+-------+--------+-----------+
| 1  | Joe   | 70000  | 3         |
| 2  | Henry | 80000  | 4         |
| 3  | Sam   | 60000  | Null      |
| 4  | Max   | 90000  | Null      |
+----+-------+--------+-----------+
Output: 
+----------+
| Employee |
+----------+
| Joe      |
+----------+
Explanation: Joe is the only employee who earns more than his manager.

SOLUTION : ==>> select e1.name as employee from employee e1 JOIN 
employee e2 on e1.managerId=e2.id and 
e1.salary > e2.salary;

================================================
